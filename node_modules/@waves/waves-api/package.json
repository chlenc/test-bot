{
  "_from": "@waves/waves-api@1.1.0",
  "_id": "@waves/waves-api@1.1.0",
  "_inBundle": false,
  "_integrity": "sha512-0ZgSDb5/PNrfYgehawWrnqha+wXpgUN5CldiBashWlH91QVl9HEOdviK+yLv5YqY8T1VYFEQH5g1I5p9dbheww==",
  "_location": "/@waves/waves-api",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@waves/waves-api@1.1.0",
    "name": "@waves/waves-api",
    "escapedName": "@waves%2fwaves-api",
    "scope": "@waves",
    "rawSpec": "1.1.0",
    "saveSpec": null,
    "fetchSpec": "1.1.0"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@waves/waves-api/-/waves-api-1.1.0.tgz",
  "_shasum": "2407fc5829fd59925035e2bc7db06f31ba49cd0d",
  "_spec": "@waves/waves-api@1.1.0",
  "_where": "/Users/alesenka/Documents/testBot",
  "author": {
    "name": "Phil Filippak",
    "email": "xenohunter@yandex.ru",
    "url": "https://github.com/xenohunter"
  },
  "bugs": {
    "url": "https://github.com/wavesplatform/waves-api/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@waves/waves-signature-generator": "^0.10.1",
    "bignumber.js": "7.0.1",
    "crypto-js": "3.1.9-1",
    "node-fetch": "1.7.3",
    "parse-json-bignumber": "0.0.2",
    "ts-api-validator": "2.1.2",
    "ts-utils": "6.0.1"
  },
  "deprecated": false,
  "description": "Waves client-side API library",
  "devDependencies": {
    "@types/chai": "^4.0.4",
    "@types/mocha": "^2.2.43",
    "browserify": "^14.4.0",
    "chai": "^4.1.2",
    "karma": "^1.7.1",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-commonjs": "^1.0.0",
    "karma-mocha": "^1.3.0",
    "karma-requirejs": "^1.1.0",
    "karma-typescript": "^3.0.7",
    "mocha": "^4.0.1",
    "mock-require": "^2.0.2",
    "requirejs": "^2.3.5",
    "typescript": "^2.5.3",
    "uglify-es": "^3.3.9"
  },
  "homepage": "https://github.com/wavesplatform/waves-api#readme",
  "keywords": [
    "cryptocurrency",
    "waves",
    "api",
    "seed",
    "transactions",
    "cryptography",
    "signature"
  ],
  "license": "MIT",
  "main": "dist/waves-api.min.js",
  "name": "@waves/waves-api",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wavesplatform/waves-api.git"
  },
  "scripts": {
    "_build-full": "browserify raw/src/WavesAPI.js --im -s WavesAPI -u crypto -u node-fetch > ./dist/waves-api.js",
    "_build-partial": "browserify raw/src/WavesAPI.js --im -s WavesAPI -u parse-json-bignumber -u bignumber.js -u crypto -u node-fetch -u ts-utils -u ts-api-validator > ./dist/waves-api.partial.js",
    "build": "npm run compile && mkdir -p dist && npm run _build-partial && npm run _build-full && npm run uglifyjs && cp ./interfaces.d.ts ./raw/interfaces.d.ts",
    "compile": "mkdir -p raw && ./node_modules/.bin/tsc -p ./tsconfig.json --declaration --outDir raw",
    "prepublishOnly": "npm run build && npm run test && npm run test-browser",
    "test": "npm run build && ./node_modules/.bin/tsc -p ./test/tsconfig.json && ./node_modules/.bin/mocha $(find ./tmp-node/test -name '*.spec.js')",
    "test-browser": "npm run build && ./node_modules/.bin/tsc -p ./test/tsconfig.browser.json && ./node_modules/.bin/karma start karma.conf.js",
    "uglifyjs": "uglifyjs ./dist/waves-api.js -o ./dist/waves-api.min.js && node_modules/.bin/uglifyjs ./dist/waves-api.partial.js -o ./dist/waves-api.partial.min.js"
  },
  "types": "raw/src/WavesAPI.d.ts",
  "version": "1.1.0"
}
